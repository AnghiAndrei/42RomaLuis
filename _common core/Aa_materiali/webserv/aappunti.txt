Funzioni permesse:
-Tutto di C++
-Manipolazione di file: open, close, read, write, access, stat
-Manipolazione di cartelle: opendir, readdir, closedir, chdir
-Gestione dei processi: fork, execve, waitpid, kill
-Gestione dei segnali: signal
-Gestione degli errori: strerror, gai_strerror, errno
-Gestione dei socket: socket, accept, listen, send, recv, connect,
						socketpair, setsockopt, getsockname, getprotobyname, 
						getaddrinfo, freeaddrinfo
-Conversione dell'ordine dei byte: htons, htonl, ntohs, ntohl
-Polling e selezione: select, poll, epoll_create, epoll_ctl, epoll_wait, kqueue, kevent
-File descriptor: dup, dup2, fcntl
-Pipeline: pipe
-Supporto alla rete: getaddrinfo, freeaddrinfo
-Macro per la gestione dei file descriptor: FD_SET, FD_CLR, FD_ISSET, FD_ZERO

Studiare:
RFC di telnet e NGINX [consigliato, ma non obbligatorio]

Note:
-il web server deve prendere un file di configurazione, altrimenti ne prende uno di base
-non puoi eseguire un altro server con execve
-deve avere solo un poll per I/O e non deve essere bloccante
-poll deve controllare la lettura e la scrittura allo stesso tempo
-si deve leggere e scrivere solo attraverso la poll
-non puoi controllare il valore di uscita dopo una operazione di I/O
-non devi usare poll prima di aver letto il file di configurazione
-possiamo usare: qualsiasi macro e definirla come FD_SET, FD_CLR, FD_ISSET, FD_ZERO
-i codici di stato http devono essere accurati (100-500)
-deve avere una pagina di errore predefinita
-puoi usare fork solo per CGI
-nota: controllare se la porta che indendi ascoltare non sia gia occupata