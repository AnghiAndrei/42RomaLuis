events { }

http {
    # Keepalive
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # Log personalizzati
    log_format custom_logs '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" "$request_body"';
    access_log /var/log/nginx/access.log custom_logs;


    # Protezione API: Limiti
    limit_req_zone $binary_remote_addr zone=users_limit:10m rate=10r/s;
    
    # Server
    upstream frontend-node { 
        least_conn;
        keepalive 32;
        server frontend-node:8080;
    }
    # upstream backend-django { 
    #     least_conn;
    #     keepalive 32;
    #     server backend-django:8000;
    # }
    # upstream backend-django-chat { 
    #     least_conn;
    #     keepalive 32;
    #     server backend-django-chat:8002;
    # }

    server {
        # ====== HTTP
        # listen 8000;
        # ===========

        # ====== HTTPS
        listen 8000 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        # ===========

        # Controllo degli host autorizzati
        if ($host !~* ^localhost$) {
            return 403;
        }

        # Frontend (React Native App)
        location / {
            proxy_pass http://frontend-node;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Supporto WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # API Utenti
        # location /users/ {
        #     proxy_pass http://backend-django;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;

        #     # Protezione
        #     limit_req zone=users_limit burst=20 delay=5;

        #     # CORS
        #     add_header Access-Control-Allow-Origin $http_origin always;
        #     add_header Access-Control-Allow-Credentials true;
        #     add_header Access-Control-Allow-Methods "GET, POST, DELETE, OPTIONS";
        #     add_header Access-Control-Allow-Headers "Content-Type, Authorization";

        #     # Handle OPTIONS
        #     if ($request_method = OPTIONS) {
        #         add_header Content-Length 0;
        #         add_header Content-Type text/plain;
        #         return 204;
        #     }
        # }

        # API Utenti
        # location /chat/ {
        #     proxy_pass http://backend-django-chat;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;

        #     # Protezione
        #     limit_req zone=users_limit burst=20 delay=5;

        #     # CORS
        #     add_header Access-Control-Allow-Origin $http_origin always;
        #     add_header Access-Control-Allow-Credentials true;
        #     add_header Access-Control-Allow-Methods "GET, POST, DELETE, OPTIONS";
        #     add_header Access-Control-Allow-Headers "Content-Type, Authorization";

        #     # Handle OPTIONS
        #     if ($request_method = OPTIONS) {
        #         add_header Content-Length 0;
        #         add_header Content-Type text/plain;
        #         return 204;
        #     }
        # }

        # Default 404
        error_page 404 /404.html;
        location = /404.html {
            internal;
            return 404;
        }
    }
}
